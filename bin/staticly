#!/usr/bin/env ruby

$: << File.expand_path("../bundle", __FILE__)

require 'bundler/setup'

libraries = ["staticly-pipeline-filters", "rake-pipeline"]

def verbose?
  ARGV.any? do |arg|
  end
end

current_dir = File.dirname(__FILE__)

app_root = File.expand_path("../..", current_dir)
cli_root = File.expand_path("..", current_dir)

app_code_dir = File.join(app_root, "Staticly")
test_dir = File.join(app_root, "test site")
output_dir = File.join(test_dir, "tmp-output")
cache_dir = File.join(test_dir, "tmp-cache")
site_dir = ARGV[0] || File.join(test_dir, "site")
ruby_dir = File.join(app_root, "vendor/ruby-1.9.3")
vendor_dir = File.join(app_root, "vendor")

rubyopts =
  libraries.map do |lib|
    path = File.join(vendor_dir, lib)
    File.join(path, "lib").tap do |l|
      $: << l
      puts "adding #{l} to load path" if verbose?
    end
  end

$: << app_code_dir
require 'rubygems'

rubyopts = rubyopts.join(" ")

assetfile_dir = File.join(app_code_dir, "Assetfile")

puts "RUBYOPT=#{rubyopts}" if verbose?

require 'Logging'
require 'Compilers'
ENV["SASSROOT"] = File.join(vendor_dir, "sass")
ENV["RUBYPATH"] = ruby_dir

Dir.chdir site_dir do
  ARGV[0] = assetfile_dir
  ARGV[1] = output_dir
  ARGV[2] = cache_dir
  load File.join(cli_root, "lib/cli.rb")
end
